# Practice Problem: Analyzing Event Participants with Sets

- You have two lists representing the participants in two separate events:

  - `event1_participants = ['Alice', 'Bob', 'Charlie', 'David', 'Eva']`
  - `event2_participants = ['Charlie', 'Eva', 'George', 'Hannah', 'Alice']`

---

# Problem: Analyzing Event Participants with Sets (Continued)

## Instructions:
1. **Find participants who attended both events**.
2. **Find participants who attended only one of the events** (but not both).
3. **List all unique participants who attended either of the events**.
4. **Remove a participant named `'Eva'` from the set of all participants**.

---

# Expected Output

- **Participants who attended both events**: `{'Charlie', 'Alice', 'Eva'}`
- **Participants who attended only one event**: `{'Bob', 'David', 'George', 'Hannah'}`
- **All unique participants**: `{'Charlie', 'George', 'Bob', 'Hannah', 'David', 'Alice'}`
- **All unique participants after removing 'Eva'**: `{'Charlie', 'George', 'Bob', 'Hannah', 'David', 'Alice'}`

---

# Solution Code

```python
event1_participants = ['Alice', 'Bob', 'Charlie', 'David', 'Eva']
event2_participants = ['Charlie', 'Eva', 'George', 'Hannah', 'Alice']

# Convert lists to sets
event1_set = set(event1_participants)
event2_set = set(event2_participants)

# 1. Participants in both events
both_events = event1_set.intersection(event2_set)
print("Participants who attended both events:", both_events)

# 2. Participants in only one event
one_event_only = event1_set.symmetric_difference(event2_set)
print("Participants who attended only one event:", one_event_only)

# 3. All unique participants
all_participants = event1_set.union(event2_set)
print("All unique participants:", all_participants)

# 4. Removing 'Eva' from all participants
all_participants.discard('Eva')
print("All unique participants after removing 'Eva':", all_participants)
